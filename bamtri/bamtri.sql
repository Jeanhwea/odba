--------------------------------------------------------------------------------
-- 表注释
SELECT tc.TABLE_NAME || ',' || tc.TABLE_TYPE || ',' || tc.COMMENTS
  FROM USER_TAB_COMMENTS tc
 WHERE REGEXP_LIKE(tc.TABLE_NAME, '^[0-9A-Za-z][_0-9A-Za-z]*$')
 ORDER BY tc.TABLE_NAME;

SELECT * FROM USER_TAB_COMMENTS;
SELECT * FROM DBA_TAB_COMMENTS;
SELECT * FROM ALL_TAB_COMMENTS;

-- 列注释
SELECT USER_COL_COMMENTS.TABLE_NAME ||
         ',' || USER_COL_COMMENTS.COLUMN_NAME ||
         ',' || USER_COL_COMMENTS.COMMENTS
  FROM USER_COL_COMMENTS
 WHERE ROWNUM < 100
 ORDER BY USER_COL_COMMENTS.TABLE_NAME;

SELECT * FROM USER_COL_COMMENTS;
SELECT * FROM DBA_COL_COMMENTS;
SELECT * FROM ALL_COL_COMMENTS;

-- 表列属性
SELECT USER_TAB_COLUMNS.TABLE_NAME ||
         ',' || USER_TAB_COLUMNS.COLUMN_NAME ||
         ',' || USER_TAB_COLUMNS.DATA_TYPE ||
         ',' || USER_TAB_COLUMNS.DATA_LENGTH ||
         ',' || USER_TAB_COLUMNS.NULLABLE
  FROM USER_TAB_COLUMNS
 WHERE ROWNUM < 2
 ORDER BY USER_TAB_COLUMNS.TABLE_NAME;

-- 唯一性约束
SELECT USER_CONS_COLUMNS.OWNER ||
         ',' || USER_CONS_COLUMNS.CONSTRAINT_NAME ||
         ',' || USER_CONS_COLUMNS.TABLE_NAME ||
         ',' || USER_CONS_COLUMNS.COLUMN_NAME ||
         ',' || USER_CONS_COLUMNS.POSITION
  FROM USER_CONS_COLUMNS
 WHERE ROWNUM < 1000
 ORDER BY USER_CONS_COLUMNS.TABLE_NAME;

SELECT USER_CONSTRAINTS.CONSTRAINT_NAME ||
         ',' || USER_CONSTRAINTS.CONSTRAINT_TYPE ||
         ',' || USER_CONSTRAINTS.STATUS
  FROM USER_CONSTRAINTS
 WHERE USER_CONSTRAINTS.CONSTRAINT_TYPE in ('U','P')
   AND ROWNUM < 100
 ORDER BY USER_CONSTRAINTS.CONSTRAINT_NAME;


-- 表元信息
SELECT TAB.COLUMN_NAME ||
         ',' || TAB.DATA_TYPE ||
         ',' || TAB.DATA_LENGTH ||
         ',' || TAB.NULLABLE ||
         ',' || CONS.CONSTRAINT_TYPE ||
         ',' || REPLACE(CMT.COMMENTS, TO_CHAR(CHR(13)) || TO_CHAR(CHR(10)), '')
  FROM USER_TAB_COLUMNS TAB
         LEFT JOIN
         USER_CONS_COLUMNS CONS_NAME
             ON TAB.TABLE_NAME = CONS_NAME.TABLE_NAME AND
         TAB.COLUMN_NAME = CONS_NAME.COLUMN_NAME
         LEFT JOIN
         USER_CONSTRAINTS CONS
             ON CONS_NAME.CONSTRAINT_NAME = CONS.CONSTRAINT_NAME
         LEFT JOIN
         USER_COL_COMMENTS CMT
             ON TAB.TABLE_NAME = CMT.TABLE_NAME AND
         TAB.COLUMN_NAME = CMT.COLUMN_NAME
 WHERE TAB.TABLE_NAME = 'T_EMPLOYEE_BASE'
    ORDER BY TAB.COLUMN_ID, CONS.CONSTRAINT_TYPE;

--------------------------------------------------------------------------------
-- AUDIT
SELECT  TO_CHAR(LAST_ACTIVE_TIME, 'YYYY-MM-DD HH:MM:SS') ||
          ',' ||  SQL_TEXT
  FROM V$SQL WHERE ROWNUM <= 100 ORDER BY LAST_ACTIVE_TIME DESC;


-- oracle 创建表时默认使用大写命名，如果想要使用小写需要额外添加双引号
CREATE TABLE TEMPLATE_TABLE (
  -- common fields
  MYID NUMBER(16) PRIMARY KEY NOT NULL,
  SIGNED_CODE VARCHAR2(64) DEFAULT 'SYSMAN' NOT NULL,
  DATETIME DATE DEFAULT SYSDATE NOT NULL,
  VALIDATION CHAR(1) DEFAULT 'y' NOT NULL,
  -- code and name
  T_CODE VARCHAR2(32) UNIQUE,
  T_NAME VARCHAR2(32)
);

-- 从模板表中创建新表
CREATE TABLE NEW_TABLE AS
  SELECT * FROM TEMPLATE_TABLE WHERE 1 = 0;

-- 编码规则表
CREATE TABLE CODE_RULE (
  -- common fields
  MYID NUMBER(16) PRIMARY KEY NOT NULL,
  SIGNED_CODE VARCHAR2(64) DEFAULT 'SYSMAN' NOT NULL,
  DATETIME DATE DEFAULT SYSDATE NOT NULL,
  VALIDATION CHAR(1) DEFAULT 'y' NOT NULL,
  -- code rule and type
  R_CODE VARCHAR2(32) UNIQUE NOT NULL,
  R_NAME VARCHAR2(32),
  R_TYPE VARCHAR2(16) DEFAULT 'product' NOT NULL,
  PATTERN VARCHAR2(128) DEFAULT '' NOT NULL,
  ARGS_JSON VARCHAR2(2048) DEFAULT '{}' NOT NULL
);

COMMENT ON COLUMN CODE_RULE.R_TYPE IS '编码类型,请写入英文字母(product, employee)';
COMMENT ON COLUMN CODE_RULE.PATTERN IS '编码模式，例如："{0}-{1}"';
COMMENT ON COLUMN CODE_RULE.ARGS_JSON IS '编码参数，使用JSON字符串存储编码所需的参数列表';

ALTER TABLE CODE_RULE MODIFY R_CODE NOT NULL;

-- USER
SELECT MYID, E_CODE
  FROM T_EMPLOYEE_BASE WHERE E_NAME = '孟庆磊';

SELECT MYID, E_CODE
  FROM T_EMPLOYEE_BASE WHERE E_NAME = '胡京徽';

DELETE FROM
 T_DEPARTMENT WHERE D_CODE = 'D711-TEST';

SELECT MYID, D_CODE, D_NAME
  FROM T_DEPARTMENT
 WHERE ROWNUM <= 10
 ORDER BY DATETIME DESC;

CREATE SEQUENCE SEQ_GLOBAL_ID
  START WITH 10000
  INCREMENT BY 1;

SELECT SEQ_GLOBAL_ID.NEXTVAL FROM DUAL;
SELECT SEQ_GLOBAL_ID.NEXTVAL FROM DUAL;

SELECT SEQ_GLOBAL_ID.CURRVAL FROM DUAL;
SELECT SEQ_GLOBAL_ID.CURRVAL FROM DUAL;
